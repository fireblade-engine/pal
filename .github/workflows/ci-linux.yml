name: Linux

on:
  push:
    branches: [ main ]
  pull_request:
    types: [labeled]
  workflow_dispatch:

jobs:
  linux-test-build-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        swift: ["latest"]
    container:
      image: swift:${{ matrix.swift }}
    if: contains( github.event.pull_request.labels.*.name, 'ci-linux') || contains( github.event.pull_request.labels.*.name, 'ci-all')
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Restore APT cache
        uses: actions/cache@v2.1.6
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt

      - name: Restore cached SPM dependencies
        uses: actions/cache@v2.1.6
        with:
          path: |
            .build/repositories
            .build/checkouts
          key: ${{ runner.os }}-spm-deps-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-deps-

      - name: Install dependencies
        run: |
          apt update
          apt-get install -y curl
          apt-get install -y sqlite3
          apt-get install -y libsqlite3-dev
          apt-get install -y libsdl2-dev
          apt-get install -y libvulkan-dev
          apt-get install -y libvulkan1
          apt-get install -y vulkan-utils

      - name: Test
        run: make test

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-artifacts-${{ matrix.xcode }}-${{ github.run_id }}
          path: |
            .build/**/*.json
            .build/**/*.xctest

      - name: Build Release
        run: make build-release

      - name: Upload build artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: build-artifacts-${{ matrix.swift }}-${{ github.run_id }}
          path: |
            *.lcov
            .build/*.yaml
            .build/**/*.a
            .build/**/*.so
            .build/**/*.dylib
            .build/**/*.dSYM
            .build/**/*.json
